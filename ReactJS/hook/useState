useState gi√∫p c·∫≠p nh·∫≠t l·∫°i tr·∫°ng th√°i c·ªßa d·ªØ li·ªáu (hay c·∫≠p nh·∫≠t l·∫°i gi√° tr·ªã c·ªßa d·ªØ li·ªáu).
Khi d·ªØ li·ªáu thay ƒë·ªïi th√¨ giao di·ªán ƒë∆∞·ª£c c·∫≠p nh·∫≠t l·∫°i theo d·ªØ li·ªáu m·ªõi.
C√∫ ph√°p:
import { useState } from "react";
function Component() {
	const [state, setState] = useState(initialStateValue);
	// Code
}
export default Component;
Trong ƒë√≥:
state: l√† t√™n bi·∫øn c·ªßa state.
setState: l√† m·ªôt function d√πng ƒë·ªÉ c·∫≠p nh·∫≠t state.
initialStateValue: l√† gi√° tr·ªã kh·ªüi t·∫°o (ban ƒë·∫ßu) c·ªßa state, ch·ªâ d√πng 1 l·∫ßn.
V√≠ d·ª• 1: B√≥ng ƒë√®n c√≥ 2 tr·∫°ng th√°i l√† b·∫≠t ho·∫∑c t·∫Øt.
V√≠ d·ª• 2: Khi tƒÉng s·ªë l∆∞·ª£ng s·∫£n ph·∫©m th√¨ t·ªïng ti·ªÅn ƒë∆∞·ª£c c·∫≠p nh·∫≠t l·∫°i.
V√≠ d·ª• 3: T·∫°o g·ª£i √Ω Search gi·ªëng c·ªßa Youtube s·ª≠ d·ª•ng onChange v√† fake data.

Khi b·∫°n g·ªçi:
setScore(3);
React s·∫Ω ƒë√°nh d·∫•u: "Component n√†y c·∫ßn re-render"
Nh∆∞ng React ch∆∞a th·ª±c hi·ªán ngay l·∫≠p t·ª©c
N√≥ ƒë·ª£i ƒë·∫øn khi h√†m hi·ªán t·∫°i ch·∫°y xong, r·ªìi m·ªõi th·ª±c hi·ªán re-render to√†n b·ªô component

üß† V√¨ sao v·∫≠y?
React ho·∫°t ƒë·ªông theo c∆° ch·∫ø batching updates ‚Äî gom c√°c setState l·∫°i r·ªìi render 1 l·∫ßn ƒë·ªÉ t·ªëi ∆∞u hi·ªáu su·∫•t.


--------CounterState---------
import { useState } from "react"

function CounterState(){
    const [counter,setCounter]=useState(0);
    return(
        <>
        <div>Ket qua: {counter}</div>
       <button onClick={()=>setCounter(counter+1)}>Up</button>
       <button onClick={()=>setCounter(counter-1)}>Down</button>
       <button onClick={()=>setCounter(0)}>Reset</button>
        </>
    )
}
export default CounterState

---------ProductState----------
import {useEffect, useState} from 'react';
function ProductState(){
    const [products,setProducts]=useState();
    const [loading,setLoading]=useState(true);
    useEffect(()=>{
        const fetchApi=()=>{
            fetch("https://dummyjson.com/product?limit=100")
            .then(res=>res.json())
            .then(data=>{
                setProducts(data.products);
                setLoading(false);
            })
        }
        setTimeout(()=>{
            fetchApi();
        },20000);
        
    },[]);
    console.log(products);
    return(
        <>
            
        {/* {products?(
            <ul>
                {products.map(item=>(
            <li key={item.id}>{item.title}</li>
        ))} 
        </ul>):(<>Loading</>)} */}
        {loading?(
            
            <>Loading</>):(<ul>
                {products.map(item=>(
            <li key={item.id}>{item.title}</li>
        ))} 
        </ul>)}
        </>
    )
}
export default ProductState
