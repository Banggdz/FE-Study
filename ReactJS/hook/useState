useState giúp cập nhật lại trạng thái của dữ liệu (hay cập nhật lại giá trị của dữ liệu).
Khi dữ liệu thay đổi thì giao diện được cập nhật lại theo dữ liệu mới.
Cú pháp:
import { useState } from "react";
function Component() {
	const [state, setState] = useState(initialStateValue);
	// Code
}
export default Component;
Trong đó:
state: là tên biến của state.
setState: là một function dùng để cập nhật state.
initialStateValue: là giá trị khởi tạo (ban đầu) của state, chỉ dùng 1 lần.

Khi bạn gọi:
setScore(3);
React sẽ đánh dấu: "Component này cần re-render"
Nhưng React chưa thực hiện ngay lập tức
Nó đợi đến khi hàm hiện tại chạy xong, rồi mới thực hiện re-render toàn bộ component

🧠 Vì sao vậy?
React hoạt động theo cơ chế batching updates — gom các setState lại rồi render 1 lần để tối ưu hiệu suất.

VD:
function App() {
  const [score, setScore] = useState(0);

  const handleClick = () => {
    setScore(3);
    console.log("Score trong hàm:", score); // ❌ In ra 0, KHÔNG phải 3
  };

  useEffect(() => {
    console.log("Effect chạy, score mới:", score); // ✅ In ra 3 sau khi render
  }, [score]);

  console.log("Render: score =", score); // ✅ In ra mỗi lần render

  return <button onClick={handleClick}>Set Score</button>;
}
Bạn gọi setScore(3) → React lên lịch re-render
Sau khi render xong với score = 3, thì useEffect mới chạy
Tức là useEffect luôn chạy sau render, không phải trong render
Thứ tự cụ thể là:
1.Gọi setScore(3)
2.React chưa re-render ngay, nhưng đánh dấu "sẽ render lại"
3.Hàm handleClick kết thúc
4.Component render lại với giá trị mới

✅ useEffect(() => {...}, [score]) mới chạy sau render
--------CounterState---------
import { useState } from "react"

function CounterState(){
    const [counter,setCounter]=useState(0);
    return(
        <>
        <div>Ket qua: {counter}</div>
       <button onClick={()=>setCounter(counter+1)}>Up</button>
       <button onClick={()=>setCounter(counter-1)}>Down</button>
       <button onClick={()=>setCounter(0)}>Reset</button>
        </>
    )
}
export default CounterState

---------ProductState----------
import {useEffect, useState} from 'react';
function ProductState(){
    const [products,setProducts]=useState();
    const [loading,setLoading]=useState(true);
    useEffect(()=>{
        const fetchApi=()=>{
            fetch("https://dummyjson.com/product?limit=100")
            .then(res=>res.json())
            .then(data=>{
                setProducts(data.products);
                setLoading(false);
            })
        }
        setTimeout(()=>{
            fetchApi();
        },20000);
        
    },[]);
    console.log(products);
    return(
        <>
            
        {/* {products?(
            <ul>
                {products.map(item=>(
            <li key={item.id}>{item.title}</li>
        ))} 
        </ul>):(<>Loading</>)} */}
        {loading?(
            
            <>Loading</>):(<ul>
                {products.map(item=>(
            <li key={item.id}>{item.title}</li>
        ))} 
        </ul>)}
        </>
    )
}
export default ProductState
