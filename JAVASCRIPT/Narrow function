1. Arrow Function đầy đủ:
Dạng này bao gồm cả dấu ngoặc nhọn  và từ khóa , thích hợp cho logic phức tạp hoặc nhiều dòng lệnh.
const sum = (a, b) => {
  return a + b;
};
console.log(sum(3, 5)); // Kết quả: 8
Lưu ý: Khi dùng dấu , bạn phải sử dụng từ khóa  nếu muốn trả về giá trị.
2. Arrow Function rút gọn (1 dòng):
Khi logic chỉ là một biểu thức duy nhất, bạn có thể bỏ  và từ khóa . Giá trị của biểu thức sẽ tự động được trả về.

const sum = (a, b) => a + b;
console.log(sum(3, 5)); // Kết quả: 8

**Không cần từ khóa  và dấu  nếu chỉ có một dòng xử lý
3. Arrow Function với 1 tham số:
Nếu hàm chỉ có một tham số, bạn có thể bỏ luôn dấu ngoặc tròn .

const square = x => x * x;
console.log(square(4)); // Kết quả: 16
Lưu ý: Nếu không có tham số hoặc nhiều hơn một tham số, bạn phải dùng .
4. Arrow Function không có tham số:
Nếu không có tham số, bạn phải sử dụng cặp  rỗng.
const greet = () => "Hello!";
console.log(greet()); // Kết quả: "Hello!"
5. Arrow Function trả về một đối tượng:
Khi muốn trả về một đối tượng, bạn cần bọc đối tượng trong dấu ngoặc tròn  để tránh nhầm lẫn với phần thân của hàm.
const getUser = name => ({
  name: name,
  age: 25
});
console.log(getUser("Nguyễn")); // Kết quả: { name: 'Nguyễn', age: 25 }
