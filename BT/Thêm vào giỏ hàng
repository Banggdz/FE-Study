<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    
</head>
<body class="showCart">
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');
        img{
            width: 50px;
        }
        body{
            font-family: 'Poppins',sans-serif;
            margin: 0;
        }
        .container{
            width: 900px;
            max-width: 90vw;
            margin: auto;
            text-align: center;
            padding-top: 10px;
            transition: transform .5s;
        }
        svg{
            width: 30px;
        }
        header{
            display: flex;
            align-items: center;
            justify-content:space-between;
            padding:20px 0;
        }
        header .icon-cart{
            position: relative;
        }
        header .icon-cart span{
            display: flex;
            width: 30px;
            height:30px;
            background-color: red;
            justify-content: center;
            align-items: center;
            color:#fff;
            border-radius: 50%;
            position: absolute;
            top:50%;
            right:-20px;
        }
        .ListProduct .item img{
            width: 90%;
            filter: drop-shadow(0 50px 20px #0009);
        }
        .ListProduct{
            display: grid;
            grid-template-columns: repeat(4,1fr);
            gap:20px;
        }
        .ListProduct .item{
            background-color: #eeeee6;
            padding: 20px;
            border-radius: 20px;
            text-align: center;
        }
        .ListProduct .item h2{
            font-weight: 500;
            font-size: large;
        }
        .ListProduct .item .price{
            letter-spacing: 4px;
            font-size: small;
        }
        .ListProduct .item button{
            background-color: #353432;
            color:#eee;
            padding:5px 10px;
            border-radius: 20px;
            margin-top:10px;
            border: none;
            cursor: pointer;
        }
        .cartTab{
            width: 400px;
            background-color: #353432;
            color:#eee;
            position: fixed;
            inset:0 -400px 0 auto;
            display: grid;
            grid-template-rows: 70px 1fr 70px ;
            transition: .5s;
        }
        body.showCart .cartTab{
            inset:0 0 0 auto;
        }
        .cartTab h1{ 
            padding:20px;
            margin:0;
            font-weight: 300;
        }
        .cartTab .btn{
            display: grid;
            grid-template-columns: repeat(2, 1fr);
        }
        .cartTab .btn button{
            background-color: #E8BC0E;
            border: none;
            font-family: Poppins;
            font-weight: 500;
            cursor: pointer;
        } 
        .cartTab .btn .close{
            background-color: #eee;
        }
        .cartTab .listCart .item img{
            width: 100%;
        }
        .cartTab .listCart .item{
            display: grid;
            grid-template-columns: 70px 150px 50px 1fr;
            gap:10px;
            text-align: center;
            align-items: center;
        }
        .listCart .quantity .minus,.plus{
            cursor: pointer;
        }
        .listCart .quantity span{
            display: inline-block;
            width: 25px;
            height:25px;
            background-color: #eee;
            color:#555;
            
        }
        .listCart .quantity span:nth-child(2){
            background-color: transparent;
            color:#eee;
        }
        .listCart .item:nth-child(even){
            background-color: #eee1;
        }
        .listCart{
            overflow: auto;
        }
    </style>

    <div class="container">
        <header>
            <div class="title">PRODUCT LIST</div>
            <div class="icon-cart">
                <svg class="w-6 h-6 text-gray-800 dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 4h1.5L9 16m0 0h8m-8 0a2 2 0 1 0 0 4 2 2 0 0 0 0-4Zm8 0a2 2 0 1 0 0 4 2 2 0 0 0 0-4Zm-8.5-3h9.25L19 7H7.312"/>
                  </svg>     
                  <span>0</span>             
            </div>
        </header>
    </div>
    <div class="ListProduct">
        <!-- <div class="item">
            <img src="img/flo.webp">
            <h2>NAME PRODUCT</h2>
            <div class="price">$200</div>
            <button class="addCart">Add to Cart</button>
        </div> -->
    </div>
    <div class="cartTab">
        <h1>Shopping Cart</h1>
        <div class="listCart">
                <!-- <div class="item">
                    <div class="image">
                        <img src="img/flo.webp" alt="">
                    </div>
                    <div class="name">NAME</div>
                    <div class="totalPrice">$200</div>
                    <div class="quantity">
                        <span class="minus"><</span>
                        <span>1</span>
                        <span class="plus">></span>
                    </div>
                </div> -->
            </div>
            <div class="btn">
                <button class="close">CLOSE</button>
            <button class="checkOut">CHECK OUT</button>
            </div>
        </div>

        <script>
            let iconCart=document.querySelector('.icon-cart');
            let body=document.querySelector('body');
            let closeCart=document.querySelector('.close');
            let listProductHTML=document.querySelector('.ListProduct');
            let listCartHTML=document.querySelector('.listCart');
            let iconCartSpan=document.querySelector('.icon-cart span');
            let listProducts=[];let carts=[];
            iconCart.addEventListener('click',()=>{
                body.classList.toggle('showCart');
            })
            closeCart.addEventListener('click',()=>{
                body.classList.toggle('showCart');
            })

            const addDataToHTML=()=>{
                listProductHTML.innerHTML='';
                if(listProducts.length>0){
                    listProducts.forEach(product=>{
                        let newProduct=document.createElement('div');
                        newProduct.classList.add('item');
                        newProduct.dataset.id=product.id;
                        newProduct.innerHTML=`
                        <img src="${product.image}">
                         <h2>${product.name}</h2>
                        <div class="price">$${product.price}</div>
                         <button class="addCart">Add to Cart</button>
                        `;
                        listProductHTML.appendChild(newProduct);
                    })
                }
            }
listProductHTML.addEventListener('click',(event)=>{
    let positionClick=event.target;
    if(positionClick.classList.contains('addCart')){
        let product_id=positionClick.parentElement.dataset.id;
        addToCart(product_id);
    }
})
const addToCart=(product_id)=>{
    let positionThisProductionInCart=carts.findIndex((value)=>value.product_id==product_id)
    if(carts.length<=0){
        carts=[{
            product_id:product_id,
            quantity:1
        }]
    } else if(positionThisProductionInCart<0){
        carts.push({
            product_id:product_id,
            quantity:1
        });
    }else{
        carts[positionThisProductionInCart].quantity=carts[positionThisProductionInCart].quantity+1;
    }
    addCartToHTML();
    addCartToMemory();
}
const addCartToMemory=()=>{
    localStorage.setItem('cart',JSON.stringify(carts));
}
const addCartToHTML=()=>{
    listCartHTML.innerHTML='';
    let totalQuantity=0;
    if(carts.length>0){
        carts.forEach(cart=>{
            totalQuantity+=cart.quantity;
            let newCart=document.createElement('div');
            newCart.classList.add('item');
            newCart.dataset.id=cart.product_id;
            let positionProduct=listProducts.findIndex((value)=>value.id==cart.product_id);
            let info=listProducts[positionProduct];            
            newCart.innerHTML=`
                <div class="image">
                        <img src="${info.image}" alt="">
                    </div>
                    <div class="name">${info.name}</div>
                    <div class="totalPrice">$${info.price*cart.quantity}</div>
                    <div class="quantity">
                        <span class="minus"><</span>
                        <span>${cart.quantity}</span>
                        <span class="plus">></span>
                    </div>
            `;
        listCartHTML.appendChild(newCart);
        })
    }
    iconCartSpan.innerText=totalQuantity;
}
listCartHTML.addEventListener('click',(event)=>{
    let positionClick=event.target;
    if(positionClick.classList.contains('minus')||positionClick.classList.contains('plus')){
        let product_id=positionClick.parentElement.parentElement.dataset.id;
        let type='minus';
        if(positionClick.classList.contains('plus')){
            type='plus';
        }
        changeQuantity(product_id,type);
    }
})
const changeQuantity=(product_id,type)=>{
    let positionItemInCart=carts.findIndex((value)=>value.product_id==product_id);
    if(positionItemInCart>=0){
        switch(type){
            case 'plus':
                carts[positionItemInCart].quantity=carts[positionItemInCart].quantity+1;
                break;
            default:
                let valueChange=carts[positionItemInCart].quantity-1;
                if(valueChange>0) carts[positionItemInCart].quantity=valueChange;
                else carts.splice(positionItemInCart,1);
                break;    
        }
    }
    addCartToHTML();
    addCartToMemory();
}


            const initApp=()=>{
                fetch('product.json')
                .then(response=>response.json())
                .then(data=>{
                    listProducts=data;
                    addDataToHTML();

                    if(localStorage.getItem('cart')){
                        carts=JSON.parse(localStorage.getItem('cart'));
                        addCartToHTML();
                    }
                })
            }
            initApp();
        </script>
</body>
</html>
